{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/addcity/addcity.component.html","./src/app/admin/admin/admin.component.html","./src/app/admin/editbus/editbus.component.html","./src/app/admin/editcity/editcity.component.html","./src/app/admin/main/main.component.html","./src/app/admin/userdetails/userdetails.component.html","./src/app/app.component.html","./src/app/book/book.component.html","./src/app/bus/bus.component.html","./src/app/checkout/checkout.component.html","./src/app/login/login.component.html","./src/app/signin/signin.component.html","./src/app/tictoc/tictoc.component.html","./src/app/admin/addcity/addcity.component.css","./src/app/admin/addcity/addcity.component.ts","./src/app/admin/admin.module.ts","./src/app/admin/admin/admin.component.css","./src/app/admin/admin/admin.component.ts","./src/app/admin/editbus/editbus.component.css","./src/app/admin/editbus/editbus.component.ts","./src/app/admin/editcity/editcity.component.css","./src/app/admin/editcity/editcity.component.ts","./src/app/admin/main/main.component.css","./src/app/admin/main/main.component.ts","./src/app/admin/userdetails/userdetails.component.css","./src/app/admin/userdetails/userdetails.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/book/BookGuard.ts","./src/app/book/book.component.css","./src/app/book/book.component.ts","./src/app/book/bookbus.service.ts","./src/app/bus/bus.component.css","./src/app/bus/bus.component.ts","./src/app/bus/bus.filter.ts","./src/app/bus/bus.service.ts","./src/app/checkout/checkout.component.css","./src/app/checkout/checkout.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/login/login.service.ts","./src/app/signin/signin.component.css","./src/app/signin/signin.component.ts","./src/app/signin/signin.service.ts","./src/app/tictoc/tictoc.component.css","./src/app/tictoc/tictoc.component.ts","./src/app/tictoc/tictoc.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": \"./src/app/admin/admin.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<p>addcity works!</p>\\n\"","module.exports = \"<style>\\n  input.ng-dirty.ng-invalid {\\n    border: 2px solid #ff0000\\n  }\\n\\n  input.ng-dirty.ng-valid {\\n    border: 2px solid #6bc502\\n  }\\n</style>\\n<h2 class=\\\"text-center\\\">ADMIN LOGIN</h2>\\n<h4 class=\\\"bg-danger\\\" *ngIf=\\\"loginError != null\\\">Login Failed.Try again.</h4>\\n\\n<div class=\\\"m-2\\\">\\n  <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"handleAdminLogin(admin)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Admin ID</label>\\n      <input class=\\\"form-control\\\" name=\\\"adminId\\\" [(ngModel)]=\\\"admin.adminId\\\" #adminId=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n        pattern=\\\"^[A-Za-z0-9 ]+$\\\" />\\n      <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"adminId.dirty && adminId.invalid\\\">\\n        <li *ngIf=\\\"adminId.errors.required\\\">\\n          You must enter a id\\n        </li>\\n        <li *ngIf=\\\"adminId.errors.pattern\\\">\\n          Id can only contain letters and spaces\\n        </li>\\n        <li *ngIf=\\\"adminId.errors.minlength\\\">\\n          Id must be at least\\n          {{adminId.errors.minlength.requiredLength}} characters\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Admin Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"admin.password\\\" #password=\\\"ngModel\\\"\\n        required/>\\n      <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"password.dirty && password.invalid\\\">\\n        <li *ngIf=\\\"password.errors.required\\\">\\n          You must enter a password\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">\\n        Admin Login\\n      </button>\\n    </div><br>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"goBack()\\\">Back</button>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \"<p>editbus works!</p>\\n\"","module.exports = \"<p>editcity works!</p>\\n\"","module.exports = \"<h4>Main Admin page</h4>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-3 bg-dark\\\">\\n        <div class=\\\"d-flex justify-content-center m-2 p-2\\\"><button class=\\\"btn btn-success\\\" (click)=\\\"showAddRoute()\\\">Add\\n                Bus Route</button></div>\\n    </div>\\n    <div class=\\\"col-9\\\">\\n        <div *ngIf=\\\"showAddRouteTogggle\\\" style=\\\"background-color: palegoldenrod\\\">\\n            <form novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"addNewBus(form)\\\">\\n                <div class=\\\"row m-1 p-1\\\">\\n                    <div class=\\\"col-3 m-1 p-1\\\"><label><strong>Select from city:</strong></label></div>\\n                    <div class=\\\"col p-1\\\"><select class=\\\"dropdown\\\" [(ngModel)]=\\\"newBus.fromCity\\\" name=\\\"newBus.fromCity\\\"\\n                            (click)=\\\"getSelectedFromCity(newBus.fromCity)\\\" required>\\n                            <option value=\\\"\\\" selected=\\\"selected\\\">--Select from city--</option>\\n                            <option *ngFor=\\\"let city of cities\\\" value={{city}}>{{city | uppercase}}</option>\\n                        </select></div>\\n                </div>\\n                <div class=\\\"row m-1 p-1\\\">\\n                    <div class=\\\"col-3 m-1 p-1\\\"> <label><strong>Select to city:</strong></label></div>\\n                    <div class=\\\"col p-1\\\"><select class=\\\"from-control clearfix\\\" [(ngModel)]=\\\"newBus.toCity\\\"\\n                            name=\\\"newBus.toCity\\\" (click)=\\\"getSelectedToCity(newBus.toCity)\\\" required>\\n                            <option value=\\\"\\\" selected=\\\"selected\\\">--Select to city--</option>\\n                            <option *ngFor=\\\"let toCity of toCities\\\" value={{toCity}}>{{toCity | uppercase}}</option>\\n                        </select></div>\\n                </div>\\n                <div class=\\\"row m-1 p-1\\\">\\n                        <div class=\\\"col-3 m-1 p-1\\\"> <label><strong>Bus Route No:</strong></label></div>\\n                        <div class=\\\"col p-1\\\">\\n                            <input type=\\\"text\\\" name=\\\"newBus.busRouteNo\\\" [(ngModel)]=\\\"newBus.busRouteNo\\\" maxlength=\\\"4\\\" required>\\n                        </div>\\n                    </div>\\n                <div class=\\\"row m-1 p-1\\\">\\n                    <div class=\\\"col-3 m-1 p-1\\\"> <label><strong>Bus description:</strong></label></div>\\n                    <div class=\\\"col p-1\\\">\\n                        <input type=\\\"text\\\" name=\\\"newBus.busDesc\\\" [(ngModel)]=\\\"newBus.busDesc\\\" maxlength=\\\"200\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"row m-1 p-1\\\">\\n                    <div class=\\\"col-3 m-1 p-1\\\"> <label><strong>Bus Fare:</strong></label></div>\\n                    <div class=\\\"col p-1\\\">\\n                        Rs.&nbsp;<input type=\\\"number\\\" name=\\\"newBus.busFare\\\" [(ngModel)]=\\\"newBus.busFare\\\" required>\\n                    </div>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center \\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">ADD</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n\\n        <table class=\\\"table table-stripped\\\">\\n            <thead>\\n                <tr>\\n                    <th>\\n                        Bus No\\n                    </th>\\n                    <th>From city</th>\\n                    <th>To city</th>\\n                    <th>Bus Description</th>\\n                    <th>Bus Fare</th>\\n                    <th></th>\\n                    <th></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let bus of buses\\\">\\n                    <td>{{bus.busRouteNo}}</td>\\n                    <td>{{bus.fromCity}}</td>\\n                    <td>{{bus.toCity}}</td>\\n                    <td>{{bus.busDescription}}</td>\\n                    <td>Rs.{{bus.busFare}}</td>\\n                    <td><button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/edit',bus.busRouteNo]\\\">Edit</button></td>\\n                    <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteBus(bus._id,bus.fromCity,bus.toCity)\\\">Delete</button></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","module.exports = \"<p>userdetails works!</p>\\n\"","module.exports = \"<!-- App component:\\n<form novalidate (ngSubmit)=\\\"showResults(product)\\\">\\n  name : <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"prdName\\\" [(ngModel)]=\\\"product.prdName\\\" minlength=\\\"5\\\" required/><br>\\n  id : <input type=\\\"number\\\" name=\\\"prdId\\\"[(ngModel)]=\\\"product.prdId\\\"/>\\n  <button type=\\\"submit\\\">Submit</button>\\n</form>\\n -->\\n<!-- <app-login></app-login> -->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-white bg-dark text-center\\\">\\n      <a class=\\\"navbar-brand\\\">BookMyBus</a>\\n      <div *ngIf=\\\"isUserLogged()\\\"><button class=\\\"flex float-right btn btn-danger text-white\\\" routerLink=\\\"\\\">Log\\n          out</button><a class=\\\"flex float-right btn btn-outline-success\\\"\\n          routerLink=\\\"\\\">{{user.firstName | uppercase}}</a></div>\\n      <div *ngIf=\\\"!isUserLogged()\\\">\\n        <button class=\\\"flex float-right btn btn-outline-success\\\" routerLink=\\\"login\\\">SignIn/Login</button>\\n        <button class=\\\"flex float-right btn btn-outline-primary\\\" routerLink=\\\"admin\\\">Admin</button></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row bg-primary text-white\\\">\\n    <a class=\\\"nav-link\\\" style=\\\"color:papayawhip\\\" routerLink=\\\"buses\\\">View All Bus</a>\\n    <a class=\\\"nav-link\\\" style=\\\"color:papayawhip\\\">Booking History</a>\\n    <a class=\\\"nav-link\\\" style=\\\"color:papayawhip\\\">Top Routes</a>\\n    <!-- <button class=\\\"nav-link\\\" (click)=\\\"showSmartSearch()\\\">SS</button> -->\\n  </div>\\n</div>\\n<!-- <app-admin></app-admin> -->\\n<router-outlet></router-outlet>\\n<!-- <app-bus></app-bus>  -->\"","module.exports = \"\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <div>\\n      <table class=\\\"table table-stripped\\\">\\n        <tbody>\\n          <tr>\\n            <td>BUS NO : </td>\\n            <td>\\n              <h5>{{bookedBus?.busRouteNo | uppercase}}</h5>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>FROM : </td>\\n            <td>\\n              <h5>{{bookedBus?.fromCity | uppercase}}</h5>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>TO : </td>\\n            <td>\\n              <h5>{{bookedBus?.toCity | uppercase}}</h5>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>BUS TYPE : </td>\\n            <td>\\n              <h5>{{bookedBus?.busDescription | uppercase}}</h5>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>BUS FARE : </td>\\n            <td>\\n              <h5>Rs.{{bookedBus?.busFare}}</h5>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>TICKETS : </td>\\n            <td>\\n              <button class=\\\"btn btn-warning btn-small\\\" (click)=\\\"decrementTicCount()\\\">-</button>\\n              <button class=\\\"btn btn-light btn-medium\\\">{{ticketCount}}</button>\\n              <button class=\\\"btn btn-warning btn-small\\\" (click)=\\\"incrementTicCount()\\\">+</button>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>TOTAL AMOUNT TO BE PAID : </td>\\n            <td>\\n              <h5>Rs. {{getTotalAmt(bookedBus?.busFare)}}</h5>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <button class=\\\" btn btn-primary btn-large m-1 p-1\\\"  (click)=\\\"proceedToCheckout()\\\">PROCEED TO CHECKOUT</button>\\n    <button class=\\\" btn btn-danger btn-large m-1 p-1\\\" (click)=\\\"goBack()\\\">BACK</button>\\n  </div>\\n</div>\"","module.exports = \"<div *ngIf=\\\"toggleSmartSearch\\\" align=\\\"center\\\">\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"busSearchNo\\\" placeholder=\\\"Bus No\\\" />\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"busSearchfromCity\\\" placeholder=\\\"From city\\\" />\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"busSearchToCity\\\" placeholder=\\\"To city\\\" />\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-3 bg-dark text-white\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col text-center\\\">\\n        <button class=\\\"btn btn-md btn-bg-outline-primary\\\" (click)=\\\"showSmartSearch()\\\">Show Smart Search</button>\\n      </div>\\n    </div>\\n    <div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <strong>Select From City:</strong>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <select class=\\\"dropdown\\\" [(ngModel)]=\\\"selectedFromCity\\\" (click)=\\\"getSelectedFromCity(selectedFromCity)\\\">\\n            <option value=\\\"\\\" selected=\\\"selected\\\">--Select from city--</option>\\n            <option *ngFor=\\\"let city of fromCities\\\" value={{city}}>{{city | uppercase}}</option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n    <div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <strong>Select To City:</strong>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <select class=\\\"from-control clearfix\\\" [(ngModel)]=\\\"selectedToCity\\\"\\n            (click)=\\\"getSelectedToCity(selectedToCity)\\\">\\n            <option value=\\\"\\\" selected=\\\"selected\\\">--Select to city--</option>\\n            <option *ngFor=\\\"let toCity of toCities\\\">{{toCity | uppercase}}</option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-9\\\">\\n    <div *ngIf=\\\"!buses.length\\\" class=\\\"text-center\\\">\\n      <h1>Sorry, No buses found :(</h1>\\n    </div>\\n    <div *ngFor=\\\"let bus of buses | busSearchFilter : busSearchNo: busSearchfromCity: busSearchToCity\\\"\\n      class=\\\"card m-4 p-3 bg-light\\\">\\n      <div *ngIf=\\\"!buses.length\\\">\\n        <h1>Sorry, No buses found :(</h1>\\n      </div>\\n      <div *ngIf=\\\"buses\\\">\\n        <h4>\\n          <div class=\\\"row clearfix\\\">\\n            <div class=\\\"col-12 p-1 m-1 badge badge-pill badge-primary d-block d-xs-none d-sm-none\\\">{{bus.busRouteNo}}\\n            </div>\\n\\n            <div class=\\\"col-1 p-1 m-1 badge badge-pill badge-primary d-none d-md-block d-xl-block\\\">{{bus.busRouteNo}}\\n            </div>\\n\\n            <div class=\\\"col p-1 m-1\\\">\\n              {{bus.fromCity | uppercase}} to {{bus.toCity | uppercase}}\\n            </div>\\n            <div class=\\\"badge\\\">Rs.{{bus.busFare}}</div>\\n          </div>\\n          <div class=\\\"row visible-lg\\\">\\n            <button class=\\\"col col-offset-2 btn btn-outline-success\\\" (click)=\\\"handleBook(bus._id)\\\">BOOK</button>\\n          </div>\\n        </h4>\\n      </div>\\n      <div class=\\\"d-flex justify-content-center\\\">{{bus.busDescription}}</div>\\n      <!-- <div class=\\\"d-lg-none\\\">hide on screens wider than lg</div>\\n          <div class=\\\"d-none d-lg-block\\\">hide on screens smaller than lg</div> -->\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<p>checkout works!</p>\\n<div id=\\\"paypal-button-container\\\">\\n</div>\\n\\n<script>\\n        paypal.Buttons().render('#paypal-button-container');\\n      </script>\\n\\n\"","module.exports = \"<!-- <div class=\\\"card bg-light text-center\\\">\\n  <h4 class=\\\"bg-danger\\\" *ngIf=\\\"loginError != null\\\">Login Failed.Try again.</h4>\\n\\n  <h3>LOGIN</h3> -->\\n<!-- <div>\\n    <label>User Name:</label>\\n    <input type=\\\"text\\\" name=\\\"userName\\\" [(ngModel)]=\\\"user.userName\\\" required/>\\n  </div>\\n  <div>\\n    <label>Password:</label>\\n    <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" required/>\\n  </div>\\n  <div>\\n    <button class=\\\"btn btn-success\\\"type=\\\"submit\\\" (click)=\\\"handleLogin()\\\">Login</button>\\n  </div> -->\\n<!-- LATEST -->\\n\\n<!-- <div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"colFormLabel\\\" class=\\\"col-sm-2 col-form-label\\\">User Name</label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userName\\\" [(ngModel)]=\\\"signin.userName\\\"\\n          (keyup)=\\\"getUserName($event)\\\" id=\\\"colFormLabel\\\" placeholder=\\\"Enter user name\\\" minlength=\\\"3\\\" required>\\n        <div *ngIf=\\\"signin.userName\\\" [class.text-success]=\\\"canProceed\\\" [class.text-danger]=\\\"!canProceed\\\">\\n          {{userNameResp}}\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"colFormLabel\\\" class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"signin.password\\\" id=\\\"colFormLabel\\\"\\n          placeholder=\\\"Enter password\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div>New User? <a class=\\\"bg-info text-white\\\" (click)=\\\"redirectToSignIn()\\\">Sign In</a></div>\\n</div> -->\\n\\n<style>\\n  input.ng-dirty.ng-invalid {\\n    border: 2px solid #ff0000\\n  }\\n\\n  input.ng-dirty.ng-valid {\\n    border: 2px solid #6bc502\\n  }\\n</style>\\n<h2 class=\\\"text-center\\\">LOGIN</h2>\\n<h4 class=\\\"bg-danger\\\" *ngIf=\\\"loginError != null\\\">Login Failed.Try again.</h4>\\n\\n<div class=\\\"m-2\\\">\\n  <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"handleLogin(user)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>User Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"userName\\\" [(ngModel)]=\\\"user.userName\\\" #userName=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n        pattern=\\\"^[A-Za-z0-9 ]+$\\\" />\\n      <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"userName.dirty && userName.invalid\\\">\\n        <li *ngIf=\\\"userName.errors.required\\\">\\n          You must enter a user name\\n        </li>\\n        <li *ngIf=\\\"userName.errors.pattern\\\">\\n          User name can only contain letters and spaces\\n        </li>\\n        <li *ngIf=\\\"userName.errors.minlength\\\">\\n          User name must be at least\\n          {{userName.errors.minlength.requiredLength}} characters\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\"\\n        required/>\\n      <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"password.dirty && password.invalid\\\">\\n        <li *ngIf=\\\"password.errors.required\\\">\\n          You must enter a user name\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">\\n        Login\\n      </button>\\n    </div><br>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <h6>New User ? <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"redirectToSignIn()\\\">Sigin In</button></h6>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \"<style>\\n  input.ng-dirty.ng-invalid {\\n    border: red\\n  }\\n\\n  input.ng-dirty.ng-valid {\\n    border: green\\n  }\\n</style>\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <h3>Register here!</h3>\\n  </div>\\n  <form novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"register(form)\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\">First Name</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"signin.firstName\\\"\\n          placeholder=\\\"Enter first name\\\" minlength=\\\"3\\\" #firstName=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z ]+$\\\">\\n        <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"firstName.dirty && firstName.invalid\\\">\\n          <li *ngFor=\\\"let error of getValidationMessages(firstName)\\\">\\n            {{error}}\\n          </li>\\n        </ul>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\">Last Name</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"signin.lastName\\\"\\n          placeholder=\\\"Enter last name\\\" #lastName=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z ]+$\\\">\\n        <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"lastName.dirty && lastName.invalid\\\">\\n          <li *ngFor=\\\"let error of getValidationMessages(lastName)\\\">\\n            {{error}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"colFormLabel\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"emailId\\\" [(ngModel)]=\\\"signin.emailId\\\"\\n          placeholder=\\\"Enter email id\\\" required #emailId=\\\"ngModel\\\" pattern=\\\"^.+@.+$\\\">\\n        <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"emailId.dirty && emailId.invalid\\\">\\n          <li *ngFor=\\\"let error of getValidationMessages(emailId)\\\">\\n            {{error}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-md-2-offset col-md-10\\\">\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"userNameToggle\\\" (change)=\\\"setUserId()\\\">\\n          <label class=\\\"form-check-label\\\">\\n            Use email user name as user name here\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\">User Name</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userName\\\" [(ngModel)]=\\\"signin.userName\\\"\\n          (keyup)=\\\"getUserName($event)\\\" placeholder=\\\"Enter user name\\\" minlength=\\\"3\\\" required #userName=\\\"ngModel\\\">\\n        <div *ngIf=\\\"signin.userName && !(userName.dirty && userName.invalid)\\\" [class.text-success]=\\\"canProceed\\\" [class.text-danger]=\\\"!canProceed\\\">\\n          {{userNameResp}}</div>\\n          <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"userName.dirty && userName.invalid\\\">\\n              <li *ngFor=\\\"let error of getValidationMessages(userName)\\\">\\n                {{error}}\\n              </li>\\n            </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"signin.password\\\" \\n          placeholder=\\\"Enter password\\\" #password=\\\"ngModel\\\" required minlength=\\\"6\\\">\\n        <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"password.dirty && password.invalid\\\">\\n          <li *ngFor=\\\"let error of getValidationMessages(password)\\\">\\n            {{error}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\">Confirm Password</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"signin.confirmPassword\\\"\\n          #confirmPassword=\\\"ngModel\\\" required placeholder=\\\"Re-enter password\\\" minlength=\\\"6\\\" (input)=\\\"confirmPasswordCheck(signin.confirmPassword)\\\">  \\n        <div *ngIf=\\\"!confirmPasswordCheck(signin.confirmPassword)\\\" class=\\\"text-danger\\\">Password and confirm Password Mismatch</div>\\n        <ul class=\\\"text-danger list-unstyled\\\" *ngIf=\\\"lastName.dirty && lastName.invalid\\\">\\n          <li *ngFor=\\\"let error of getValidationMessages(lastName)\\\">\\n            {{error}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Register</button><button class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Back</button>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \"<p>tictoc works!</p>\\n<button [class.bg-info]=\\\"tiles['0:0']==='X'\\\" [class.bg-warning]=\\\"tiles['0:0']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    [disabled]=\\\"tiles['0:0']\\\" (click)=\\\"fillTile('0:0')\\\">{{tiles['0:0']}}</button>\\n<button [class.bg-info]=\\\"tiles['0:1']==='X'\\\" [class.bg-warning]=\\\"tiles['0:1']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('0:1')\\\">{{tiles['0:1']}}</button>\\n<button [class.bg-info]=\\\"tiles['0:2']==='X'\\\" [class.bg-warning]=\\\"tiles['0:2']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('0:2')\\\">{{tiles['0:2']}}</button>\\n<br>\\n<button [class.bg-info]=\\\"tiles['1:0']==='X'\\\" [class.bg-warning]=\\\"tiles['1:0']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('1:0')\\\">{{tiles['1:0']}}</button>\\n<button [class.bg-info]=\\\"tiles['1:1']==='X'\\\" [class.bg-warning]=\\\"tiles['1:1']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('1:1')\\\">{{tiles['1:1']}}</button>\\n<button [class.bg-info]=\\\"tiles['1:2']==='X'\\\" [class.bg-warning]=\\\"tiles['1:2']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('1:2')\\\">{{tiles['1:2']}}</button>\\n<br>\\n<button [class.bg-info]=\\\"tiles['2:0']==='X'\\\" [class.bg-warning]=\\\"tiles['2:0']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('2:0')\\\">{{tiles['2:0']}}</button>\\n<button [class.bg-info]=\\\"tiles['2:1']==='X'\\\" [class.bg-warning]=\\\"tiles['2:1']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('2:1')\\\">{{tiles['2:1']}}</button>\\n<button [class.bg-info]=\\\"tiles['2:2']==='X'\\\" [class.bg-warning]=\\\"tiles['2:2']==='O'\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"fillTile('2:2')\\\">{{tiles['2:2']}}</button>\\n\\n<!-- <div id=\\\"mydiv\\\">hello</div><br>\\n<div id=\\\"mydiv\\\" (click)=\\\"call()\\\">world</div> -->\\n\\n{{result}}\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkZGNpdHkvYWRkY2l0eS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addcity',\n  templateUrl: './addcity.component.html',\n  styleUrls: ['./addcity.component.css']\n})\nexport class AddcityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin/admin.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MainComponent } from './main/main.component';\nimport { EditbusComponent } from './editbus/editbus.component';\nimport { AddcityComponent } from './addcity/addcity.component';\nimport { EditcityComponent } from './editcity/editcity.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nlet routing = RouterModule.forChild([\n  { path: \"auth\", component: AdminComponent },\n  { path: \"main\", component: MainComponent },\n  { path: \"edit/:bus\", component: EditbusComponent },\n  { path: \"**\", redirectTo: \"auth\" }\n])\n\n@NgModule({\n  declarations: [AdminComponent, MainComponent, EditbusComponent, AddcityComponent, EditcityComponent, UserdetailsComponent],\n  imports: [\n    CommonModule, RouterModule, FormsModule, routing\n  ],\n  exports: [AdminComponent, MainComponent]\n})\nexport class AdminModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  private admin = {\n    adminId: \"\",\n    password: \"\"\n  }\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n  goBack() {\n    this.router.navigateByUrl(\"buses\")\n  }\n  handleAdminLogin() {\n    if (this.admin.adminId === \"admin\" && this.admin.password == \"admin\") {\n      console.log(\"valid admin id\");\n      this.router.navigateByUrl(\"/admin/main\");\n    }else console.log(\"In valid admin id\");\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2VkaXRidXMvZWRpdGJ1cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-editbus',\n  templateUrl: './editbus.component.html',\n  styleUrls: ['./editbus.component.css']\n})\nexport class EditbusComponent implements OnInit {\n\n  constructor(private router: Router, private route : ActivatedRoute) { \n   console.log('found bus for redit : '+JSON.stringify(this.route.snapshot.paramMap.get(\"bus\")))\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2VkaXRjaXR5L2VkaXRjaXR5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-editcity',\n  templateUrl: './editcity.component.html',\n  styleUrls: ['./editcity.component.css']\n})\nexport class EditcityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21haW4vbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit ,OnChanges, SimpleChanges} from '@angular/core';\nimport { BusService } from 'src/app/bus/bus.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  newBus: any = {\n    busRouteNo: \"\",\n    fromCity: \"\",\n    toCity: \"\",\n    busDesc: \"\",\n    busFare: 0\n  }\n  buses: any[] = [];\n  cities: string[] = [];\n  toCities: string[] = [];\n  fromCities: string[] = [];\n  showAddRouteTogggle: boolean = false;\n  constructor(private busSvc: BusService, private router: Router, private route: ActivatedRoute) {\n    busSvc.getAllBuses().subscribe((BUSES) => {\n      this.buses = BUSES;\n      console.log(\"found buses length: \" + this.buses.length)\n    })\n    busSvc.getAllCities().subscribe((CITIES) => {\n      this.cities = CITIES.map(c => c.name.toLocaleLowerCase()).sort();\n      console.log('found cities length: ' + this.cities.length)\n    })\n  }\n\n  ngOnInit() {\n    this.busSvc.getAllBuses().subscribe((BUSES) => {\n      this.buses = BUSES;\n      console.log(\"found buses length: \" + this.buses.length)\n    })\n    this.busSvc.getAllCities().subscribe((CITIES) => {\n      this.cities = CITIES.map(c => c.name.toLocaleLowerCase()).sort();\n      console.log('found cities length: ' + this.cities.length)\n    })\n\n  }\n\n  ngOnChanges(changes : SimpleChanges){\n    if(changes.showAddRouteTogggle){\n      console.log('here')\n    }\n    console.log(\"ng onchange\")\n\n  }\n  showAddRoute() {\n    this.showAddRouteTogggle = !this.showAddRouteTogggle;\n  }\n  getSelectedFromCity(fromCity) {\n    this.toCities = this.cities.filter(c => c !== fromCity)\n  }\n  getSelectedToCity(toCity) {\n    this.fromCities = this.cities.filter(c => c !== toCity)\n  }\n  addNewBus(form) {\n    if (form.valid) {\n      //this.newBus.busRouteNo = busRouteNo;\n      console.log(this.newBus)\n      this.busSvc.addBus(this.newBus).subscribe(res => {\n        if (res) {\n          alert(\"Bus added successfully!\");\n          form.reset();\n        } else {\n          alert(\"Unable to add bus!\")\n        }\n        this.ngOnInit();\n      });\n\n    } else {\n      console.log(\"invalid\")\n    }\n  }\n\n  deleteBus(busId, fromCity, toCity) {\n    if (confirm(\"Are you sure you want to remove the bus from \" + fromCity + \" to \" + toCity + \" ?\")) {\n      this.busSvc.deleteBus(busId).subscribe(res => {\n        alert((res) ? \"Bus removed successfully!\" : \"Unable to remove bus!\");\n        this.ngOnInit();\n      })\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJkZXRhaWxzL3VzZXJkZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AppComponent } from './app.component';\nimport { BusComponent } from './bus/bus.component';\nimport { AdminComponent } from './admin/admin/admin.component';\nimport { BookComponent } from './book/book.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { BookGuard } from './book/BookGuard';\nimport { TictocComponent } from './tictoc/tictoc.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\nconst routes: Routes = [\n  { path: \"\", component: AppComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"buses\", component: BusComponent },\n  { path: \"admin\", loadChildren: \"./admin/admin.module#AdminModule\" },\n  { path: \"book\", component: BookComponent, canActivate: [BookGuard] },\n  { path: \"signin\", component: SigninComponent },\n  { path: \"tictoc\", component: TictocComponent },\n  { path: \"checkout\", component: CheckoutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { BusComponent } from './bus/bus.component';\nimport { BookBusService } from './book/bookbus.service';\nimport { LoginService } from './login/login.service';\n//import { BusService } from './bus/bus.service';\n\nexport class Product {\n  prdName: String;\n  prdId: Number;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BookMyBus';\n  user: any = {};\n  product = new Product();\n // isUserLogged : boolean = \n  constructor(private busComp: BusComponent, private bookSvc: BookBusService,private loginSvc : LoginService) {\n\n  }\n  showResults(formData) {\n    console.log('form data : ' + JSON.stringify(formData.prdId))\n\n    this.product.prdId = formData.prdId;\n    this.product.prdName = formData.prdName;\n\n    console.log('new pd', this.product)\n  }\n  showSmartSearch() {\n    console.log('here')\n    this.busComp.showSmartSearch();\n  }\n  \n  isUserLogged() {\n    if(this.bookSvc.getUserLoggedStatus()){\n      this.user = this.loginSvc.getLoggedUser()\n     // console.log(\"assinged user: \"+this.user+\" \"+this.user.firstName);\n    }\n    return this.bookSvc.getUserLoggedStatus();  \n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BusComponent } from './bus/bus.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminModule } from './admin/admin.module';\nimport { BookComponent } from './book/book.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { BusSearchFilter } from './bus/bus.filter';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { TictocComponent } from './tictoc/tictoc.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BusComponent,\n    LoginComponent,\n    BookComponent,\n    SigninComponent,\n    BusSearchFilter,\n    CheckoutComponent,\n    TictocComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule,\n    AdminModule\n  ],\n  providers: [BusComponent,BookComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"../../../node_modules/@angular/router\";\r\nimport { Injectable } from \"../../../node_modules/@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BookBusService } from './bookbus.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BookGuard {\r\n    constructor(private router: Router, private bookBusSvc: BookBusService) {\r\n        console.log('in book auth guard : ' + bookBusSvc.isUserLogged)\r\n    }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n        if (!this.bookBusSvc.isUserLogged) {\r\n            console.log('is not logged')\r\n            this.router.navigateByUrl('login');\r\n            return false;\r\n        } else {\r\n            console.log('is logged')\r\n        }\r\n        return true;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2svYm9vay5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { BusService } from '../bus/bus.service';\nimport { BookBusService } from './bookbus.service';\n\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n  bookedBus: any = {};\n  ticketCount: number = 1;\n  constructor(private bus: BusService, private bookBusSvc: BookBusService,private router : Router, private route : ActivatedRoute) {\n    this.bookedBus = bookBusSvc.getBookedBus();\n    //console.log('booked bus : ' + JSON.stringify(bookBusSvc.getBookedBus()))\n  }\n\n  ngOnInit() {\n  }\n\n  decrementTicCount() {\n    if (this.ticketCount > 1) {\n      this.ticketCount--;\n    }\n  }\n\n  incrementTicCount() {\n    this.ticketCount++;\n  }\n\n  getTotalAmt(fare){\n    return this.ticketCount *  fare;\n  }\n  goBack(){\n    this.router.navigateByUrl(\"buses\");\n  }\n  proceedToCheckout(){\n    \n    this.router.navigateByUrl(\"checkout\")\n  }\n}","import { Injectable } from \"../../../node_modules/@angular/core\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BookBusService {\r\n    bookedBus: any;\r\n    isUserLogged: boolean = false;\r\n    setBookedBus(bus: any) {\r\n     //   console.log('before setting : ' + this.bookedBus)\r\n        this.bookedBus = bus;\r\n     //   console.log('after setting : ' + JSON.stringify(this.bookedBus))\r\n    }\r\n    getBookedBus() {\r\n      //  console.log('before getting : ' + JSON.stringify(this.bookedBus))\r\n        return this.bookedBus;\r\n    }\r\n    setUserLoggedStatus(status: boolean) {\r\n      //  console.log('before user logged : ' + this.isUserLogged)\r\n        this.isUserLogged = status;\r\n      //  console.log('after setting : ' + this.isUserLogged)\r\n    }\r\n    getUserLoggedStatus() {\r\n       // console.log('getting user logged status : ' + this.isUserLogged)\r\n        return this.isUserLogged;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2J1cy9idXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { BusService } from './bus.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n//import { BookComponent } from '../book/book.component';\nimport { BookBusService } from '../book/bookbus.service';\n@Component({\n  selector: 'app-bus',\n  templateUrl: './bus.component.html',\n  styleUrls: ['./bus.component.css']\n})\nexport class BusComponent implements OnInit {\n  isUserLoggedIn: boolean = false;\n  selectedFromCity: string = \"\";\n  selectedToCity: string = \"\";\n  cities: string[] = [];\n  fromCities: string[] = [];\n  toCities: string[] = [];\n  BUSES: any[] = [];\n  buses: any[] = [];\n  toggleSmartSearch: boolean = false;\n  constructor(private busService: BusService, private route: ActivatedRoute,\n    private router: Router, private bookBusSvc: BookBusService) {\n    busService.getAllBuses().subscribe((BUSES) => {\n      this.BUSES = BUSES;\n      this.buses = this.BUSES;\n      console.log('Buses found : ' + this.buses.length)\n    })\n    busService.getAllCities().subscribe((CITIES) => {\n      this.cities = CITIES.map(c => c.name.toLocaleLowerCase()).sort();\n      this.fromCities = this.cities;\n      this.toCities = this.cities;\n      console.log('total cities found length:' + this.cities.length)\n    })\n  }\n\n  getAllBuses() {\n    return this.buses = this.BUSES;\n  }\n\n  getSelectedFromCity(city: string) {\n    console.log('selected from city : ' + city)\n    this.selectedFromCity = city.toLocaleLowerCase();\n    if (this.selectedToCity !== \"\" && this.selectedToCity != null && this.selectedToCity != undefined) {\n      this.BUSES.filter((bus) => console.log(bus.toCity.toLocaleLowerCase() +\"*\"+this.selectedToCity.toLocaleLowerCase() +\"*\"+bus.fromCity.toLocaleLowerCase() +\"**\"+this.selectedFromCity.toLocaleLowerCase()))\n      console.log(this.buses.length)\n      this.buses = this.BUSES.filter((bus) => bus.toCity.toLocaleLowerCase() === this.selectedToCity.toLocaleLowerCase() && bus.fromCity.toLocaleLowerCase() === this.selectedFromCity.toLocaleLowerCase())\n      console.log(this.buses.length)\n    } else if (this.selectedFromCity !== \"\" && this.selectedFromCity != null && this.selectedFromCity != undefined) {\n      //check whether it's coming here when we didn't select to city\n      console.log(this.BUSES.forEach((bus) => console.log(bus.fromCity.toLocaleLowerCase() +\"*\"+ city.toLocaleLowerCase())));\n      this.buses = this.BUSES.filter((bus) => bus.fromCity.toLocaleLowerCase() === city.toLocaleLowerCase());\n      console.log(this.buses.length)\n    }\n    //else this.buses = this.BUSES;\n    //update to city list\n    this.toCities = this.cities.filter((city) => city != this.selectedFromCity.toLocaleLowerCase());\n  }\n  getSelectedToCity(city: string) {\n    // let tempBusList  = this.buses;\n    //console.log(tempBusList.length)\n    //console.log('seleted to city : ' + city)\n    this.getSelectedFromCity(this.selectedFromCity.toLocaleLowerCase());\n    if (this.selectedToCity !== \"\" && this.selectedToCity != null && this.selectedToCity != undefined) {\n      console.log(\"before entering to filter: \"+this.buses.length)\n      this.buses = this.buses.filter((bus) => bus.toCity.toLocaleLowerCase() == city.toLocaleLowerCase())\n      console.log(\"after entering to filter: \"+this.buses.length)\n    }\n    else this.buses = this.buses;\n\n    this.fromCities = this.cities.filter((city) => city.toLocaleLowerCase() != this.selectedToCity.toLocaleLowerCase());\n  }\n\n  handleBook(busId) {\n    //   if (this.isUserLoggedIn)\n    this.bookBusSvc.setBookedBus(this.buses.find((bus) => bus._id === busId));\n\n    this.router.navigate(['book'])\n\n    //   else\n    //   this.router.navigateByUrl('login')\n\n    console.log(\"user not signed in\")\n    //this.bookBusSvc.getBookedBus();\n    console.log('route ' + busId)\n  }\n\n  showSmartSearch() {\n    this.toggleSmartSearch = !this.toggleSmartSearch;\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n    name: \"busSearchFilter\"\r\n})\r\nexport class BusSearchFilter implements PipeTransform {\r\n    transform(buses: any[], busNo?: string, fromCity?: string, toCity?: string) {\r\n\r\n        if (busNo) {\r\n            console.log('found search : ' + busNo)\r\n            buses = [...buses.filter((bus) => bus.busRouteNo.toLocaleLowerCase().startsWith(busNo.toLocaleLowerCase()))]\r\n            console.log(buses)\r\n        }\r\n\r\n        if (fromCity) {\r\n            console.log('from city : ' + fromCity)\r\n            buses = [...buses.filter((bus) => bus.fromCity.toLocaleLowerCase().startsWith(fromCity.toLocaleLowerCase()))]\r\n        }\r\n\r\n        if (toCity) {\r\n            console.log('to city : ' + toCity)\r\n            buses = [...buses.filter((bus) => bus.toCity.toLocaleLowerCase().startsWith(toCity.toLocaleLowerCase()))]\r\n        }\r\n\r\n\r\n        return buses;\r\n    }\r\n}","import { Injectable } from \"../../../node_modules/@angular/core\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nconst PROTOCOL: String = \"\";\r\nconst PORT: String = \"\";\r\nconst SERVER: String = \"/api/\";\r\n@Injectable({ providedIn: 'root' })\r\nexport class BusService {\r\n    constructor(private http: HttpClient) { }\r\n    getAllBuses(): Observable<any[]> {\r\n        console.log(\"trying to call express server...\")\r\n        return this.http.get<any[]>(`${PROTOCOL}${PORT}${SERVER}buses`);\r\n    }\r\n    getAllCities(): Observable<any[]> {\r\n        return this.http.get<any[]>(`${PROTOCOL}${PORT}${SERVER}cities`)\r\n    }\r\n    addBus(bus: any) {\r\n        return this.http.post(`${PROTOCOL}${PORT}${SERVER}addBus`, bus);\r\n    }\r\n    deleteBus(busId){\r\n        console.log(\"busid : \"+busId)\r\n        return this.http.post(`${PROTOCOL}${PORT}${SERVER}deleteBus`,busId);\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoZWNrb3V0L2NoZWNrb3V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\ndeclare var paypal;\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n    constructor(private router: Router, private route: ActivatedRoute) {\n      console.log(\"check out called\")\n    }\n\n\n\n  ngOnInit() {\n    paypal.Buttons({\n\n      // Set up the transaction\n      createOrder: function (data, actions) {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: '0.01',\n              currency_code:'USD'\n            }\n          }]\n        });\n      },\n\n      // Finalize the transaction\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function (details) {\n          // Show a success message to the buyer\n          alert('Transaction completed by ' + details.payer.name.given_name + '!');\n        });\n      }\n\n\n    }).render('#paypal-button-container');\n  }\n\n}\n","module.exports = \"input.ng-dirty.ng-invalid{border: 2px solid red}\\r\\ninput.ng-dirty.ng-valid{border:green}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQkFBMEIscUJBQXFCO0FBQy9DLHdCQUF3QixZQUFZIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWRpcnR5Lm5nLWludmFsaWR7Ym9yZGVyOiAycHggc29saWQgcmVkfVxyXG5pbnB1dC5uZy1kaXJ0eS5uZy12YWxpZHtib3JkZXI6Z3JlZW59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router, ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { BookBusService } from '../book/bookbus.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private user = {\n    userName: \"\",\n    password: \"\"\n  };\n  private loginError: string = null;\n  isLogged = false;\n\n\n  constructor(private loginService: LoginService, private router: Router, private route: ActivatedRoute, private bookBusSvc: BookBusService) { }\n\n  handleLogin() {\n    //console.log(this.user.userName + \"fe \" + this.user.password)\n    this.loginService.login(this.user).subscribe((res) => {\n      if (res == null || res == undefined) {\n        this.loginError = \"In valid user details. Try again\";\n        this.user.userName = \"\";\n        this.user.password = \"\";\n        this.router.navigateByUrl(\"login\");\n      } else {\n        console.log(\"Hurray! Successfully logged in!!\")\n        this.loginError = null;\n        this.isLogged = true;\n        this.bookBusSvc.setUserLoggedStatus(true);\n        this.loginService.setLoggedUser(res.data);\n        this.loginService.setLoggedUserToken(res.token);\n        console.log(\"user's token: \"+this.loginService.getLoggedUserToken());\n        console.log(\"logged in user dtls :\"+this.loginService.getLoggedUser())\n        if (this.bookBusSvc.getBookedBus() != null || this.bookBusSvc.getBookedBus() != undefined)\n          this.router.navigateByUrl(\"book\");\n        else this.router.navigateByUrl(\"buses\")\n      }\n    })\n  }\n\n  redirectToSignIn() {\n    this.router.navigateByUrl(\"signin\");\n  }\n\n  ngOnInit() {\n  }\n\n}\n//AY2rQU4wQ68lagYPSWYkLk1QD2dp6hUdmPetb1AzCmUjaetyZ-cqwFDuxTMa0oFyiCoZ4ZVe6mZBzwK3\n//logesh.jeppiaar-facilitator@gmail.com","import { Injectable } from \"../../../node_modules/@angular/core\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nconst PROTOCOL: String = \"\";\r\nconst PORT: String = \"\";\r\nconst SERVER: String = \"api/\";\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n    isUserLoggedIn: boolean = false;\r\n    loggedUser: any;\r\n    loggedUserToken: any = null;\r\n    constructor(private http: HttpClient) { }\r\n    login(user): Observable<any> {\r\n        //console.log('here'+user.userName+\" \"+user.password+\" - \"+`${PROTOCOL}${PORT}login`)\r\n        return this.http.post<any>(`${PROTOCOL}${PORT}${SERVER}login`, user);\r\n    }\r\n    setLoggedUser(user: any) {\r\n        this.loggedUser = user;\r\n    }\r\n    getLoggedUser() {\r\n        return this.loggedUser;\r\n    }\r\n    setLoggedUserToken(token: any){\r\n        this.loggedUserToken = token;\r\n    }\r\n    getLoggedUserToken(){\r\n        return this.loggedUserToken;\r\n    }   \r\n}","module.exports = \"input.ng-dirty.ng-invalid{border: red}\\r\\ninput.ng-dirty.ng-valid{border:green}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQixXQUFXO0FBQ3JDLHdCQUF3QixZQUFZIiwiZmlsZSI6InNyYy9hcHAvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQubmctZGlydHkubmctaW52YWxpZHtib3JkZXI6IHJlZH1cclxuaW5wdXQubmctZGlydHkubmctdmFsaWR7Ym9yZGVyOmdyZWVufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '../../../node_modules/@angular/forms';\nimport { SignInService } from './signin.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  public signin: any = {\n    firstName: \"\",\n    lastName: \"\",\n    emailId: \"\",\n    userName: null,\n    password: \"\",\n    confirmPassword: \"\"\n  }\n  public userNameToggle: boolean = false;\n  public userNameResp: string = null;\n  public canProceed: boolean = true;\n  constructor(private signInService: SignInService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  setUserId() {\n    console.log('called' + this.userNameToggle)\n    this.userNameToggle = !this.userNameToggle;\n    if (this.userNameToggle) {\n      this.signin.userName = this.signin.emailId.toString().substring(0, this.signin.emailId.indexOf('@')).toLowerCase();\n      this.signInService.checkUserNameAvailability(this.signin.userName).subscribe((res) => {\n        console.log('found resp.')\n        if (res) {//UserNameAvailable\n          this.userNameResp = \"User name Available\";\n          this.canProceed = true;\n        } else {// need to highlight the field\n          this.userNameResp = \"User name already taken. Please enter new User name\";\n          this.canProceed = false;\n        }\n      });\n    } else {\n      this.signin.userName = null;\n      this.canProceed = false;\n    }\n  }\n  public visited: boolean = false;\n  getUserName(event: any) {\n    let user = this.signin.userName.toLowerCase();\n    console.log(\"user:\" + user + \" \" + user.length);\n    if (user.length >= 3) {\n      this.visited = true;\n      this.signInService.checkUserNameAvailability(this.signin.userName.toLowerCase()).subscribe((res) => {\n        if (res) {//UserNameAvailable\n          this.userNameResp = \"User name Available\";\n          this.canProceed = true;\n        } else {// need to highlight the field\n          this.userNameResp = \"User name already taken. Please enter new User name\";\n          this.canProceed = false;\n        }\n      });\n      // } else {\n      //   if (this.visited) {\n      //     this.signin.userName = null;\n      //     this.canProceed = false;\n      //   }else this.visited = false;\n    }\n\n  }\n  getValidationMessages(state: any, name?: string) {\n    let field: string = state.path;\n    let errors: string[] = [];\n    if (state.errors) {\n      for (let error in state.errors) {\n        switch (error) {\n          case \"required\": errors.push(`You must enter ${field}`);\n            break;\n          case \"minlength\": errors.push(`${field} must contain ${state.errors['minlength'].requiredLength} characters`);\n            break;\n          case \"pattern\":\n            if (field.toString().includes(\"email\"))\n              errors.push(`${field} contains illegal characters. for example ...try entering foo@bar.com`);\n            else\n              errors.push(`${field} contains illegal characters`);\n            break;\n        }\n      }\n    }\n    return errors;\n  }\n\n  register(form: NgForm) {\n    console.log('reg mtds')\n    if (!this.confirmPasswordCheck(this.signin.confirmPassword))\n      alert(\"Password mismatch!...password and confirm password are not equal..Try entering agian!\")\n    else {\n      if (form.valid) {\n        console.log('printing whole singin comp: ' + JSON.stringify(this.signin))\n        this.signInService.addUser(this.signin).subscribe((res) => {\n          if (res != null || res != undefined) {\n            alert(\"Sucessfully registered!\");\n            this.router.navigateByUrl(\"login\");\n          } else {\n            alert(\"An error occured while registering..Try again later\");\n            this.router.navigateByUrl(\"buses\");\n          }\n        });\n      } else {\n        console.log('sorry invalid form')\n      }\n    }\n\n  }\n  confirmPasswordCheck(confirmPassword: string) {\n    return this.signin.confirmPassword === \"\" || this.signin.password == confirmPassword;\n  }\n  goBack() {\n    this.router.navigateByUrl(\"buses\")\n  }\n}\n","import { Injectable } from \"../../../node_modules/@angular/core\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nconst PROTOCOL: String = \"\";\r\nconst PORT: String = \"\";\r\nconst SERVER: String = \"api/\";\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignInService {\r\n    isUserLoggedIn: boolean = false;\r\n    constructor(private http: HttpClient) { }\r\n    signIn(user): Observable<any> {\r\n        // console.log('here'+user.userName+\" \"+user.password+\" - \"+`${PROTOCOL}${PORT}login`)\r\n        return this.http.post<any>(`${PROTOCOL}${PORT}${SERVER}login`, user);\r\n    }\r\n    checkUserNameAvailability(userName): Observable<any> {\r\n        //console.log('sending userName to server for availability check, passing  username:' + userName.toLowerCase());\r\n        return this.http.post<any>(`${PROTOCOL}${PORT}${SERVER}userName`, { \"userName\": userName });\r\n    }\r\n    addUser(user:any):Observable<any>{\r\n        console.log('user :'+user+' sent for adding to db');\r\n        return this.http.post<any>(`${PROTOCOL}${PORT}${SERVER}addUser`,user)\r\n    }\r\n}","module.exports = \"#mydiv{\\r\\n    background: aqua;\\r\\n    width: 60px;\\r\\n    margin-left: 20px;\\r\\n    padding-top: 2px;\\r\\n    border: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGljdG9jL3RpY3RvYy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3RpY3RvYy90aWN0b2MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNteWRpdntcclxuICAgIGJhY2tncm91bmQ6IGFxdWE7XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDJweDtcclxuICAgIGJvcmRlcjogcmVkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { TicTocService } from './tictoc.service';\n\n@Component({\n  selector: 'app-tictoc',\n  templateUrl: './tictoc.component.html',\n  styleUrls: ['./tictoc.component.css']\n})\nexport class TictocComponent implements OnInit {\n\n  oneone: boolean = false;\n  tiles: any[] = [];\n  counter: number = 0;\n  tile: string;\n  player : string ;\n  result :any ;\n  constructor(private svc: TicTocService) { }\n\n  ngOnInit() {\n  }\n\n  fillTile(tile) {\n    console.log(\"tile found : \" + tile);\n    this.oneone = true;\n    if (this.counter % 2 == 0)\n      this.player = 'X';\n    else this.player = 'O';\n    this.tiles[tile] = this.player;\n    console.log(this.tiles)\n    this.counter++;\n    this.tile = tile;\n    this.svc.addEntry(this.tile, this.player).subscribe(res=>{\n      this.result = res.response\n      console.log(\"res : \"+this.result)\n    });\n  }\n  call() {\n    console.log(\"call\")\n  }\n\n}\n","import { Injectable } from \"../../../node_modules/@angular/core\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nconst PROTOCOL: String = \"http://localhost:\";\r\nconst PORT: String = \"8080/\";\r\n@Injectable({ providedIn: 'root' })\r\nexport class TicTocService {\r\n    constructor(private http: HttpClient) { }\r\n    addEntry(move, player): Observable<any> {\r\n        // console.log('here'+user.userName+\" \"+user.password+\" - \"+`${PROTOCOL}${PORT}login`)\r\n        let params = new HttpParams().set('move', move).set('player', player);\r\n\r\n        return this.http.post<any>(`${PROTOCOL}${PORT}tictoc`, params);\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}